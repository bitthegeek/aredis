<project name="aredis" default="dist" basedir=".">
    <description>
        simple build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="docs.api"  location="javadocs"/>
  <property name="common.lib"  location="../aredis-lib"/>

  <path id="master.classpath">
    <fileset dir="${common.lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" debug="true">
      <classpath refid="master.classpath"/>
    </javac>
  </target>

  <target name="javadoc">
    <javadoc
           destdir="${docs.api}"
           author="true"
           version="true"
           use="true"
           windowtitle="AREDIS API">

      <classpath refid="master.classpath"/>
      <fileset dir="src" defaultexcludes="yes">
      </fileset>

      <link offline="true" href="http://download.oracle.com/javase/8/docs/api/" packagelistLoc="java-package-list"/>
      <doctitle><![CDATA[<h1>AREDIS - Redis Java Client</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2013- Suresh Mahalingam. All Rights Reserved.</i>]]></bottom>
    </javadoc>
  </target>

  <target name="dist" depends="clean, compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the aredis.jar file -->
    <jar jarfile="${dist}/lib/aredis.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${docs.api}"/>
  </target>
</project>
